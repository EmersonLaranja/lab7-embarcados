
Discarded input sections

 .text          0x0000000000000000        0x0 gcc/main.o
 .data          0x0000000000000000        0x0 gcc/main.o
 .bss           0x0000000000000000        0x0 gcc/main.o
 .text.Delay    0x0000000000000000       0x3c gcc/main.o
 .text          0x0000000000000000        0x0 gcc/startup_efm32gg.o
 .data          0x0000000000000000        0x0 gcc/startup_efm32gg.o
 .bss           0x0000000000000000        0x0 gcc/startup_efm32gg.o
 .text.SystemInit
                0x0000000000000000        0xc gcc/startup_efm32gg.o
 .text          0x0000000000000000        0x0 gcc/system_efm32gg.o
 .data          0x0000000000000000        0x0 gcc/system_efm32gg.o
 .bss           0x0000000000000000        0x0 gcc/system_efm32gg.o
 .text.SystemMaxCoreClockGet
                0x0000000000000000       0x14 gcc/system_efm32gg.o
 .text.SystemHFXOClockGet
                0x0000000000000000       0x14 gcc/system_efm32gg.o
 .text.SystemHFXOClockSet
                0x0000000000000000       0x30 gcc/system_efm32gg.o
 .text.SystemLFRCOClockGet
                0x0000000000000000       0x10 gcc/system_efm32gg.o
 .text.SystemULFRCOClockGet
                0x0000000000000000       0x10 gcc/system_efm32gg.o
 .text.SystemLFXOClockGet
                0x0000000000000000       0x14 gcc/system_efm32gg.o
 .text.SystemLFXOClockSet
                0x0000000000000000       0x30 gcc/system_efm32gg.o

Memory Configuration

Name             Origin             Length             Attributes
FLASH            0x0000000000000000 0x0000000000100000 xr
RAM              0x0000000020000000 0x0000000000020000 xrw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD gcc/main.o
LOAD gcc/startup_efm32gg.o
LOAD gcc/system_efm32gg.o
START GROUP
LOAD /home/laranja/gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/thumb/v7-m/nofp/libgcc.a
LOAD /home/laranja/gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/lib/thumb/v7-m/nofp/libg_nano.a
LOAD /home/laranja/gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/lib/thumb/v7-m/nofp/libc_nano.a
END GROUP
START GROUP
LOAD /home/laranja/gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/thumb/v7-m/nofp/libgcc.a
LOAD /home/laranja/gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/lib/thumb/v7-m/nofp/libc_nano.a
END GROUP

.text           0x0000000000000000      0x594
 *(.vectors)
 .vectors       0x0000000000000000       0xdc gcc/startup_efm32gg.o
                0x0000000000000000                __Vectors
                0x00000000000000dc                __Vectors_End = .
                0x00000000000000dc                __Vectors_Size = (__Vectors_End - __Vectors)
                0x0000000020000010                __end__ = .
 *(.text*)
 .text.Config_LED_PWM
                0x00000000000000dc       0x78 gcc/main.o
                0x00000000000000dc                Config_LED_PWM
 .text.Config_INPUT_PORTS
                0x0000000000000154       0x2c gcc/main.o
                0x0000000000000154                Config_INPUT_PORTS
 .text.brightness
                0x0000000000000180      0x1fc gcc/main.o
                0x0000000000000180                brightness
 .text.main     0x000000000000037c       0x44 gcc/main.o
                0x000000000000037c                main
 .text.Reset_Handler
                0x00000000000003c0       0x50 gcc/startup_efm32gg.o
                0x00000000000003c0                Reset_Handler
 .text._main    0x0000000000000410        0xc gcc/startup_efm32gg.o
                0x0000000000000410                _main
 .text.Default_Handler
                0x000000000000041c        0x6 gcc/startup_efm32gg.o
                0x000000000000041c                TIMER2_IRQHandler
                0x000000000000041c                DebugMon_Handler
                0x000000000000041c                USART0_TX_IRQHandler
                0x000000000000041c                I2C0_IRQHandler
                0x000000000000041c                HardFault_Handler
                0x000000000000041c                LEUART1_IRQHandler
                0x000000000000041c                SysTick_Handler
                0x000000000000041c                USART1_RX_IRQHandler
                0x000000000000041c                PendSV_Handler
                0x000000000000041c                NMI_Handler
                0x000000000000041c                I2C1_IRQHandler
                0x000000000000041c                TIMER3_IRQHandler
                0x000000000000041c                USART1_TX_IRQHandler
                0x000000000000041c                MSC_IRQHandler
                0x000000000000041c                ADC0_IRQHandler
                0x000000000000041c                UsageFault_Handler
                0x000000000000041c                LEUART0_IRQHandler
                0x000000000000041c                GPIO_EVEN_IRQHandler
                0x000000000000041c                UART0_TX_IRQHandler
                0x000000000000041c                UART1_TX_IRQHandler
                0x000000000000041c                RTC_IRQHandler
                0x000000000000041c                TIMER0_IRQHandler
                0x000000000000041c                LCD_IRQHandler
                0x000000000000041c                PCNT2_IRQHandler
                0x000000000000041c                UART0_RX_IRQHandler
                0x000000000000041c                LETIMER0_IRQHandler
                0x000000000000041c                TIMER1_IRQHandler
                0x000000000000041c                USART2_RX_IRQHandler
                0x000000000000041c                Default_Handler
                0x000000000000041c                EMU_IRQHandler
                0x000000000000041c                PCNT0_IRQHandler
                0x000000000000041c                USB_IRQHandler
                0x000000000000041c                BURTC_IRQHandler
                0x000000000000041c                PCNT1_IRQHandler
                0x000000000000041c                ACMP0_IRQHandler
                0x000000000000041c                USART0_RX_IRQHandler
                0x000000000000041c                MemManage_Handler
                0x000000000000041c                SVC_Handler
                0x000000000000041c                DAC0_IRQHandler
                0x000000000000041c                UART1_RX_IRQHandler
                0x000000000000041c                CMU_IRQHandler
                0x000000000000041c                EBI_IRQHandler
                0x000000000000041c                LESENSE_IRQHandler
                0x000000000000041c                GPIO_ODD_IRQHandler
                0x000000000000041c                AES_IRQHandler
                0x000000000000041c                VCMP_IRQHandler
                0x000000000000041c                DMA_IRQHandler
                0x000000000000041c                BusFault_Handler
                0x000000000000041c                USART2_TX_IRQHandler
 *fill*         0x0000000000000422        0x2 
 .text.GetProdRev
                0x0000000000000424       0x18 gcc/system_efm32gg.o
 .text.SystemCoreClockGet
                0x000000000000043c       0x34 gcc/system_efm32gg.o
                0x000000000000043c                SystemCoreClockGet
 .text.SystemHFClockGet
                0x0000000000000470      0x118 gcc/system_efm32gg.o
                0x0000000000000470                SystemHFClockGet
 .text.SystemInit
                0x0000000000000588        0xc gcc/system_efm32gg.o
                0x0000000000000588                SystemInit
 *(.init)
 *(.fini)
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend.o *crtend?.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend.o *crtend?.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)
 *(.rodata*)
 *(.eh_frame*)

.glue_7         0x0000000000000594        0x0
 .glue_7        0x0000000000000594        0x0 linker stubs

.glue_7t        0x0000000000000594        0x0
 .glue_7t       0x0000000000000594        0x0 linker stubs

.vfp11_veneer   0x0000000000000594        0x0
 .vfp11_veneer  0x0000000000000594        0x0 linker stubs

.v4_bx          0x0000000000000594        0x0
 .v4_bx         0x0000000000000594        0x0 linker stubs

.iplt           0x0000000000000594        0x0
 .iplt          0x0000000000000594        0x0 gcc/main.o

.rel.dyn        0x0000000000000594        0x0
 .rel.iplt      0x0000000000000594        0x0 gcc/main.o

.ARM.extab
 *(.ARM.extab* .gnu.linkonce.armextab.*)
                0x0000000000000594                __exidx_start = .

.ARM.exidx
 *(.ARM.exidx* .gnu.linkonce.armexidx.*)
                0x0000000000000594                __exidx_end = .
                0x0000000000000594                __etext = .

.data           0x0000000020000000        0x8 load address 0x0000000000000594
                0x0000000020000000                __data_start__ = .
 *(vtable)
 *(.data*)
 .data.SystemHFXOClock
                0x0000000020000000        0x4 gcc/system_efm32gg.o
 .data.SystemLFXOClock
                0x0000000020000004        0x4 gcc/system_efm32gg.o
                0x0000000020000008                . = ALIGN (0x4)
 *(.ram)
                0x0000000020000008                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)
                0x0000000020000008                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_NAME(.init_array.*))
 *(.init_array)
                [!provide]                        PROVIDE (__init_array_end = .)
                0x0000000020000008                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_NAME(.fini_array.*))
 *(.fini_array)
                [!provide]                        PROVIDE (__fini_array_end = .)
 *(.jcr*)
                0x0000000020000008                . = ALIGN (0x4)
                0x0000000020000008                __data_end__ = .

.igot.plt       0x0000000020000008        0x0 load address 0x000000000000059c
 .igot.plt      0x0000000020000008        0x0 gcc/main.o

.bss            0x0000000020000008        0x4 load address 0x000000000000059c
                0x0000000020000008                . = ALIGN (0x4)
                0x0000000020000008                __bss_start__ = .
 *(.bss*)
 .bss.SystemCoreClock
                0x0000000020000008        0x4 gcc/system_efm32gg.o
                0x0000000020000008                SystemCoreClock
 *(COMMON)
                0x000000002000000c                . = ALIGN (0x4)
                0x000000002000000c                __bss_end__ = .

.heap           0x0000000020000010      0xc00
                0x0000000020000010                __HeapBase = .
                0x0000000020000010                __end__ = .
                0x0000000020000010                end = __end__
                0x0000000020000010                _end = __end__
 *(.heap*)
 .heap          0x0000000020000010      0xc00 gcc/startup_efm32gg.o
                0x0000000020000c10                __HeapLimit = .

.stack_dummy    0x0000000020000c10      0x400
 *(.stack*)
 .stack         0x0000000020000c10      0x400 gcc/startup_efm32gg.o
                0x0000000020020000                __StackTop = (ORIGIN (RAM) + LENGTH (RAM))
                0x000000002001fc00                __StackLimit = (__StackTop - SIZEOF (.stack_dummy))
                [!provide]                        PROVIDE (__stack = __StackTop)
                0x0000000000000001                ASSERT ((__StackLimit >= __HeapLimit), region RAM overflowed with stack)
                0x0000000000000001                ASSERT ((LENGTH (FLASH) >= (__etext + SIZEOF (.data))), FLASH memory overflowed !)
OUTPUT(gcc/blink1.axf elf32-littlearm)
LOAD linker stubs

.debug_info     0x0000000000000000      0xd7c
 .debug_info    0x0000000000000000      0x697 gcc/main.o
 .debug_info    0x0000000000000697      0x1e1 gcc/startup_efm32gg.o
 .debug_info    0x0000000000000878      0x504 gcc/system_efm32gg.o

.debug_abbrev   0x0000000000000000      0x3d8
 .debug_abbrev  0x0000000000000000      0x158 gcc/main.o
 .debug_abbrev  0x0000000000000158       0xfb gcc/startup_efm32gg.o
 .debug_abbrev  0x0000000000000253      0x185 gcc/system_efm32gg.o

.debug_aranges  0x0000000000000000       0xe8
 .debug_aranges
                0x0000000000000000       0x40 gcc/main.o
 .debug_aranges
                0x0000000000000040       0x38 gcc/startup_efm32gg.o
 .debug_aranges
                0x0000000000000078       0x70 gcc/system_efm32gg.o

.debug_ranges   0x0000000000000000       0xb8
 .debug_ranges  0x0000000000000000       0x30 gcc/main.o
 .debug_ranges  0x0000000000000030       0x28 gcc/startup_efm32gg.o
 .debug_ranges  0x0000000000000058       0x60 gcc/system_efm32gg.o

.debug_line     0x0000000000000000      0x912
 .debug_line    0x0000000000000000      0x499 gcc/main.o
 .debug_line    0x0000000000000499      0x16e gcc/startup_efm32gg.o
 .debug_line    0x0000000000000607      0x30b gcc/system_efm32gg.o

.debug_str      0x0000000000000000      0x599
 .debug_str     0x0000000000000000      0x360 gcc/main.o
                                        0x3b6 (size before relaxing)
 .debug_str     0x0000000000000360       0xb6 gcc/startup_efm32gg.o
                                        0x1f8 (size before relaxing)
 .debug_str     0x0000000000000416      0x183 gcc/system_efm32gg.o
                                        0x400 (size before relaxing)

.comment        0x0000000000000000       0x49
 .comment       0x0000000000000000       0x49 gcc/main.o
                                         0x4a (size before relaxing)
 .comment       0x0000000000000049       0x4a gcc/startup_efm32gg.o
 .comment       0x0000000000000049       0x4a gcc/system_efm32gg.o

.ARM.attributes
                0x0000000000000000       0x2d
 .ARM.attributes
                0x0000000000000000       0x2d gcc/main.o
 .ARM.attributes
                0x000000000000002d       0x2d gcc/startup_efm32gg.o
 .ARM.attributes
                0x000000000000005a       0x2d gcc/system_efm32gg.o

.debug_frame    0x0000000000000000      0x2b8
 .debug_frame   0x0000000000000000       0xc0 gcc/main.o
 .debug_frame   0x00000000000000c0       0x78 gcc/startup_efm32gg.o
 .debug_frame   0x0000000000000138      0x180 gcc/system_efm32gg.o
